@inherits LayoutComponentBase

@using System.Security.Claims
@using TaskManager.UI.Infrastructure.Auth

@inject NavigationManager NavigationManager
@inject CustomAuthStateProvider AuthStateProvider
@inject IAuthService AuthService

<div class="page">
    <main>
        <div class="top-row px-4 class" @onclick="ToggleUserMenu">
            <div class="user-info">
                @(_currentUserName ?? string.Empty)

                @if (_showLogout)
                {
                    <button class="btn btn-secondary logout-button" @onclick:stopPropagation="true" @onclick="Logout">Выйти</button>
                }
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private string? _currentUserName;
    private bool _showLogout = false;
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        _currentUserName = user.FindFirst(ClaimTypes.Name)?.Value;
    }

    private void ToggleUserMenu()
    {
        _showLogout = !_showLogout;
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/login", forceLoad: true);
    }
    
}