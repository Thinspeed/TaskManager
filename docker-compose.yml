services:
  backend:
    image: taskmanager.api
    container_name: task_manager_api
    build:
      context: .
      dockerfile: TaskManager.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionString: Host=postgres;Port=5432;Database=postgres;Username=defaultUser;Password=defaultPassword
      JwtOptions__SecretKey: secret_key1234_sssssecret_key1234_ssssfe9ufgb9w3ugb9
    networks:
      - terra
        
  frontend:
    image: taskmanager.ui
    container_name: task_manager_ui
    build:
      context: .
      dockerfile: TaskManager.UI/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    networks:
      - terra
        
  postgres:
    image: postgres:16.4
    container_name: task_manager_postgres
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "superuser"
      POSTGRES_PASSWORD: "password"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./environment/postgresql/init-db:/docker-entrypoint-initdb.d
      - task-manager-data:/var/lib/postgresql/data
    mem_limit: 512M
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U superuser -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - terra
        
  nginx:
    image: nginx:1.27.4-alpine
    container_name: task_manager_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./environment/nginx/config.conf:/etc/nginx/conf.d/default.conf"
      - "./environment/nginx/localhost.pem:/etc/nginx/ssl/localhost.pem"
      - "./environment/nginx/localhost-key.pem:/etc/nginx/ssl/localhost-key.pem"
    networks:
      - terra
        
volumes:
  task-manager-data:
        
networks:
  terra: